@model IEnumerable<Product>

@{
    ViewData["Title"] = "Producten";
}
<h1>@ViewData["Title"]</h1>

<form asp-controller="Home" asp-action="Producten" method="get" class="form-inline">
    <div class="input-group">

        @* Op dit moment gaat de select bij het versturen van het formulier terug naar de default waarde ("Kies een categorie...").
        Het is gebruiksvriendelijker om de huidig geselecteerde waarde te laten zien, hiervoor moet je een ViewModel gebruiken
        om zowel de lijst producten als de huidige categorie door te geven aan deze View (zie oplossing volgend werkcollege). *@
        <select name="Categorie" asp-items="Html.GetEnumSelectList<Categorie>()" class="form-select mb-2 mr-sm-2" onchange="this.form.submit()">
            <option selected="selected" value="">Kies een categorie...</option>
        </select>
        <input type="submit" value="Toon" class="btn btn-primary mb-2" />
    </div>
</form>

@if (Model != null)
{
    @if (!Model.Any())
    {
        <div class="alert alert-warning">
            Geen producten in deze categorie...
        </div>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Naam)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Beschrijving)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Prijs)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Naam)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Beschrijving)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Prijs)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}